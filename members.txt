https://opensource.guide/how-to-contribute/#anatomy-of-an-open-source-project
https://opensource-guide.translate.goog/building-community/?_x_tr_sl=en&_x_tr_tl=ja&_x_tr_hl=ja&_x_tr_pto=wapp

コミュニティ運営スタイル:SSS主導の開発 (トップダウン型)
リポジトリ:Github上
同期チャット チャネル:slack or discord
提案方式:forl/PullReq Type
開発スタイル:イテレーション開発
リリースサイクル: 約Xカ月サイクル
Termination期間:
LTS:あり
LTS Termination期間:
コントリビューションとレビュー: 誰でもPullReq可。リポジトリへの変更提案やパッチは、メンテナーによってレビューされ、承認された後にマージされます。



1. リードメンテナー（Lead Maintainer）
役割: プロジェクトの全体的な方向性を決定し、最終的な意思決定を行う人物です。プロジェクトのビジョンや戦略を定め、主要な方針を決めます。
責任: プロジェクトの進行や他のメンテナーやコントリビューターとの調整、リリースの計画を監督することが多いです。リードメンテナーは、通常、コミュニティの活動や外部との関係も管理します。
決定権: コードの重要な変更に関する最終的な判断を下すことができる立場にあります。

2. メンテナー（Maintainer）
役割: プロジェクトにおける実務的な管理を担当する開発者です。コードレビュー、バグ修正、新機能の実装、プルリクエストのマージなど、日々の作業を行います。
責任: 特定の機能や部分の担当として、コードの品質を保ちながら運営します。場合によっては、リードメンテナーの指示に従って作業を進めることが多いです。
決定権: 重要な決定を下すことは少なく、通常はリードメンテナーや他のコアメンバーと連携して作業します。
ほとんどのリーダーは、プロジェクトの特定の部分を保守する責任を持つ人々に一部の決定事項を委譲します。大きなプロジェクトでは、これらのメンテナーが、さらに、その中のサブ コンポーネントに対する保守責任を他の人に委譲する場合もあります。例えば、Linus Torvaldsは、Linuxカーネル ドキュメントに関連する決定をJonathan Corbetに委譲しています。


3.コアメンバー
プロジェクトに長期間貢献している、または重要な役割を担っている開発者たち。コードレビュー、バグ修正、新機能の実装、ドキュメントの改善などを担当します。

4.コントリビューター（貢献者）
プロジェクトに貢献しているが、コアメンバーではない開発者たち。コードの修正や新機能の提案を行い、プルリクエストを送ることが多いです。

5.ユーザー
ソフトウェアを使用している人々。直接的な貢献者ではないものの、バグ報告や機能リクエスト、ユーザーサポートに関与することもあります。

6.ドキュメンテーター
ソフトウェアの使用方法や開発ガイドラインに関する文書を担当するメンバー。ドキュメントの更新や改善が重要です。

7.コミュニティマネージャー
コミュニティ内の関係を構築し、維持する役割を担います。議論の進行や、貢献者間の調整を行い、時には問題解決に向けて調整役を果たします。

8.テスト担当者
プロジェクトの品質管理を担当します。コードのバグを検出したり、CI/CD（継続的インテグレーション／継続的デリバリー）のセットアップを行うこともあります。

9.スポンサーまたは支援者
財政的またはリソース的にプロジェクトを支援する企業や個人。特に大きなプロジェクトでは、開発費用やインフラの提供が行われます。



■eds:SSS主導コミュニティ
リードメンテナー(コミュニティリーダー ) : 田代
メンテナー: 上官 SysApp
メンテナー: 
メンテナー:
Tester:
CI/CD:


■senscord:SSS主導コミュニティ  
リードメンテナー(コミュニティリーダー )  : 青柳
メンテナー:
メンテナー:
メンテナー:
Tester:
CI/CD:

■evp:SSS主導コミュニティ  
リードメンテナー(コミュニティリーダー )   : 岡
メンテナー:
メンテナー
メンテナー
Tester:
CI/CD





